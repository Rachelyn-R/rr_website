jQuery.fn.extend({ GridHorizontal: function (t = {}) { return GridH(this, t), this } }); let GridH = function (t, e = {}) { e.item; let n = e.gutter || 20, r = e.minWidth || 300, o = e.maxRowHeight || 320, l = t.width(), s = t.children(".item"), f = s.find("img"), h = 0, u = 0, a = 0; !1 === ["absolute", "fixed", "relative"].includes(t.css("position")) && t.css("position", "relative"); let c = function (t) { let e = []; for (let i = 0; i < t.length; ++i)e[i] = { naturalWidth: t[i].naturalWidth, naturalHeight: t[i].naturalHeight, src: t[i].src, ratio: t[i].naturalWidth / t[i].naturalHeight }; return e }(f); !function (t) { let e = 0; for (let i = 1, s = t.length; i <= s; i++) { if (subArray = t.slice(0, i), l < r) m(subArray, l, h), e = p(subArray[0], l); else { if (!((e = g(subArray)) < o)) continue; d(subArray, e, h) } b(e + n), t = t.slice(i), s = t.length, i = 0 } t.length > 0 && (d(t, o, h), b(o)); a = h }(c); function g(t) { let e, r = t.length - 1, o = l - r * n, s = 0; for (i = 0, len = t.length; i < len; i++)s += t[i].ratio; return e = s > 0 ? o / s : 0 } function d(t, e, i) { let r = 0; for (let o = 0, l = t.length; o < l; o++)item = t[o], item.width = e * item.ratio, item.height = e, item.offsetTop = i, item.offsetLeft = r, r += item.width + n } function m(t, e, i) { let n = t[0]; n.width = e, n.height = p(n, e), n.offsetTop = i, n.offsetLeft = 0 } function b(t) { h += t } function p(t, e) { return e / t.ratio } $(t).css("height", a), function (t, e, i) { for (let n = 0; n < e.length; ++n)e[n].src == i[n].src && $(t[n]).css("position", "absolute").width(i[n].width).height(i[n].height).css("top", i[n].offsetTop).css("left", i[n].offsetLeft) }(s, f, c), h = 0, u = 0 };